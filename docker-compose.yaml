version: '3.9'

services:
  server:
    build:
      context: .
    container_name: server
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/doctoranywhere
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - "8080:8080"
    networks:
      - backend
  db:
    image: 'postgres:15.2-alpine3.17'
    container_name: db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      interval: 5s
      timeout: 60s
      retries: 5
      start_period: 5s
    user: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=doctoranywhere
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend  
  
# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend: